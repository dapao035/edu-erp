<?phpnamespace app\common\model;class TestScore extends BaseModel{    use BelongsToClazz, BelongsToStudent, BelongsToTests,BelongsToQuestion;    protected $table = 'test_score';    static function getListByTestId($test_id)    {        return self::where(compact('test_id'))->select();    }    static function cover($test_id)    {        return self::where(compact('test_id'))->update(['is_cover' => 1]);    }    static function recover($ids)    {        return self::where('id', 'in', $ids)->update(['is_cover' => 0]);    }    static function saveScore($student_id, $test_id,$question_id, $score, $is_right = null, $answer=null)    {        $map = compact('student_id','test_id','question_id');        $find = self::where($map)->find();        $data['is_cover'] = 0;        $data['edit_time'] = now();        $data['editor_id'] = session('login_id');        $data['score'] = $score;        if($is_right!==null) $data['is_right'] = $is_right;        if($answer!==null) $data['answer'] = $answer;        if($find) {            return self::where($map)->update($data);        } else {            $data['add_time'] = now();            $data['clazz_id'] = Student::where('id',$student_id)->value('clazz_id');            return  self::insert( array_merge($map, $data) );        }    }}
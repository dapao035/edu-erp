<?phpnamespace app\common\model;use think\Db;class Knowledge extends BaseModel{    protected $table = 'knowledge';    function category()    {        return $this->belongsToMany(KnowledgeCategory::class, 'knowledge_category_rel', 'category_id', 'knowledge_id');    }    function section()    {        return $this->belongsToMany(Section::class, 'knowledge_section', 'section_id', 'knowledge_id');    }    function question()    {        return $this->belongsToMany(Question::class, 'knowledge_question', 'question_id', 'knowledge_id');    }    function test()    {        return $this->belongsToMany(Test::class, 'knowledge_test', 'test_id', 'knowledge_id');    }    function h5()    {        return $this->belongsToMany(H5::class, 'knowledge_h5', 'h5_id', 'knowledge_id');    }    static function addOne($title, $category_id = null)    {        $find = self::where(compact('title'))->find();        if($find) return $find['id'];        $new_id = self::insertGetId([            'title' => $title,            'add_time' => now(),            'edit_time' => now(),        ]);        if($category_id)            Db::name('knowledge_category_rel')->insert([                'category_id' => $category_id,                'knowledge_id' => $new_id,            ]);        return $new_id;    }    // 扫描数组里有没有新增的，如果有，新增，并附加到数组里    static function scanAndMerge(array &$items, $category_id)    {        foreach ($items as $k => $v){            if(trim($v) == '' ) {                unset($items[$k]);            } elseif ( !(is_numeric($v) && $find = self::find($v)) ){                $items[$k] = self::addOne($v, $category_id);            }        }    }    // 保存关联表数据    static function saveCategoryRel(int $knowledge_id, array $category_ids)    {        Db::name('knowledge_category_rel')->where(compact('knowledge_id'))->delete();        $insert = [];        foreach ($category_ids as $id) {            $insert[] = [                'category_id' => $id,                'knowledge_id' => $knowledge_id,            ];        }        Db::name('knowledge_category_rel')->insertAll($insert);    }    // 保存详情数据    static function saveH5Rel(int $knowledge_id, array $h5_ids)    {        Db::name('knowledge_h5')->where(compact('knowledge_id'))->delete();        $insert = [];        foreach ($h5_ids as $id) {            $insert[] = [                'h5_id' => $id,                'knowledge_id' => $knowledge_id,            ];        }        Db::name('knowledge_h5')->insertAll($insert);    }    static function getH5Ids($where)    {        return Db::name('knowledge_h5')->where($where)->column('h5_id');    }}
<?phpnamespace app\common\model;use think\Db;use think\model\concern\SoftDelete;class QuestionGroup extends BaseModel{    use SoftDelete;    protected $table = 'question_group';    protected $deleteTime = 'delete_time';    static function addOne(int $editor_id , string $body = '') :int    {        static::removeEmptyGroup();        $data['body'] = $body;        $data['editor_id'] = $editor_id;        $data['add_time'] = now();        $data['edit_time'] = now();        return static::insertGetId($data);    }    static function removeEmptyGroup()    {        $no_questions = Db::name('question_group g')            ->join('question q', 'g.id=q.group_id', 'left')            ->field('g.id, count(q.id) count')            ->where('q.delete_time is null')            ->group('g.id')            ->having('count=0')            ->select();        if(empty($no_questions)) return;        $ids = array_column($no_questions, 'id');        if(empty($ids)) return;        Db::name('question_group')->where('id','in', $ids)->delete();    }    function question()    {        return $this->hasMany(Question::class, 'group_id')->order('sort_num');    }}
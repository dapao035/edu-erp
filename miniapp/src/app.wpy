<script>
  import wepy from 'wepy';
  import 'wepy-async-function';
  import Auth from './common/Auth';
  import Tips from './common/Tips';
  import Api from './common/Api';
  export default class extends wepy.app {
    config = {
      pages: [
        'pages/home',
        'pages/authorize',
        'pages/change_org',
        'pages/redpacketcatch',
        'pages/products',
        'pages/me',
        'pages/product',
        'pages/bind_mob',
        'pages/profile',
        'pages/zone',
        'pages/shop/notice_pay',
        'pages/notifications',
        'pages/notification',
        'pages/teacher/calendar',
        'pages/teacher/scan',
        'pages/teacher/login',
        'pages/teacher/homework',
        'pages/gift/orders',
        'pages/homework',
        'pages/gift/gifts',
        'pages/divisions',
        'pages/shop/goods',
        'pages/shop/orders',
        'pages/shop/address_new',
        'pages/notice_paid',
        'pages/shop/confirm',
        'pages/users',
        'pages/user',
        'pages/courses_quantity',
        'pages/orders',
        'pages/qrcode',
        'pages/vouchers',
        'pages/division',
        'pages/product_confirm',
        'pages/product_course',
        'pages/shop_home',
        'pages/calendar',
        'pages/about',
        'pages/signs',
        'pages/term',
        'pages/share',
        'pages/redpacket',
        // 'pages/course',
        // 'pages/course_confirm',
        // 'pages/courses',
        // 'pages/badges',
        // 'pages/map',
        // 'pages/notice_vip',
        // 'pages/courseconfirm',
        // 'pages/recharge',
        // 'pages/promotion',
        // 'pages/notice_given',
        // 'pages/notice_recharged',
      ],
      window: {
        // backgroundColor: 'white', // 窗口的背景色
        // backgroundColorTop: '#000', // 顶部窗口的背景色
        // backgroundColorBottom: '#1c1c1c', // 底部窗口的背景色
        backgroundTextStyle: 'light', // 下拉 loading 的样式，仅支持 dark / light
        navigationBarBackgroundColor: '#525fe1',
        navigationBarTextStyle: 'white'
      },
      tabBar: {
        // backgroundColor: '#1c1c1c',
        selectedColor: '#525fe1',
        // color: '#525fe1',
        list: [
          {
            pagePath: 'pages/home',
            iconPath: 'images/icon50.png',
            selectedIconPath: 'images/icon51.png',
            text: '首页'
          },
          {
            pagePath: 'pages/products',
            iconPath: 'images/icon30.png',
            selectedIconPath: 'images/icon31.png',
            text: '分类'
          },
          {
            pagePath: 'pages/calendar',
            iconPath: 'images/icon20.png',
            selectedIconPath: 'images/icon21.png',
            text: '日程'
          },
          // {
          //   pagePath: 'pages/gift/gifts',
          //   iconPath: 'images/icon10.png',
          //   selectedIconPath: 'images/icon11.png',
          //   text: '礼品'
          // },
          {
            pagePath: 'pages/me',
            iconPath: 'images/icon40.png',
            selectedIconPath: 'images/icon41.png',
            text: '我的'
          }
        ]
      },
      networkTimeout: {
        request: 10000,
        downloadFile: 10000
      }
    };

    globalData = {
      userInfo: null,
      version: '1.0.1',
      // todayStr: '' + today.getFullYear() +  (today.getMonth() + 1) + (today.getDate() < 10 ? '0'+ today.getDate(): today.getDate())
      shareConfig: function(title, flag, imageUrl) {
        var orgInfo =  wepy.getStorageSync('orgInfo');
        var orgcode =  wepy.getStorageSync('orgcode');
        var img = imageUrl || (orgInfo.red_packet_max > 0 ? orgInfo.red_packet_img : "") || "";

        var profile =  wepy.getStorageSync('profile');
        var prof = '', tit = title;
        if (profile != '' && orgInfo.red_packet_max > 0) {
          prof = "." + profile.member_id  + "." + (flag || "");
          var text = [
            "急急急！快来帮我助力领红包，你也可以领哦，爱你!",
            "就差一点点了，我真的很想定这个，麻烦你帮我助一下力!",
            "你的助力对我真的特别重要，麻烦你帮帮我~",
            "是朋友就帮我助力一下！真的需要你~",
            "亲爱的，帮我点一下可以吗！你最好了~",
            "亲们，帮帮忙，帮我助力领红包啊，求求您了~",
            "快来帮我点一下啊亲，就差一点点了~",
            "帮助力一下好不好，一起领红包啊，拜托您了~",
            "亲们，拜托帮帮忙，帮我助力一下好不好~",
            "急！可以帮我点一下吗，我的红包就靠你了!",
          ];
          var rand = Math.floor( Math.random() * text.length );
          tit += text[rand];
        }
        return {
          title: tit || (orgInfo.org_name + "欢迎您"),
          path: "/pages/home?share_scene=share." + orgcode + prof,
          imageUrl: img,
        }
      }
    };
    async getApiLoginData() {
      let code = await Auth.getLoginCode()
      // console.log('code', code)
      if (code) {
        await Api.login(code)
      } else {
        Tips.error('登录失败')
      }
    }
    constructor() {
      super();
      this.use('promisify')
      this.use('requestfix');
    // 拦截request请求
    this.intercept('request', {
      config (p) {
        let token = Auth.getToken()
        if (token) {
          p.header = Object.assign({}, p.header, {'Authorization': 'Bearer ' + token})
        }
        return p;  // 必须返回OBJECT参数对象，否则无法发送请求到服务端
      },
      success (p) {
        console.log('请求结果: ', p)
        if (typeof p.data === 'undefined') {
          Tips.error('数据响应错误')
        } else {
          if (p.data.msg == "Unauthenticated.") {
            wepy.navigateTo({ url: 'authorize' });
          }
        }
        if (p.data.status === 'error') {
          Tips.alert(p.data.msg)
        }
        return p
      },
      fail (p) {
        return p
      },
      complete (p) {
      }
    })
    }
    async onLaunch() {
      let res = await wepy.getSystemInfo()
      if(res.errMsg == 'getSystemInfo:ok') {
        wepy.setStorageSync('systemInfo', {
          windowWidth : res.windowWidth,
          windowHeight : res.windowHeight,
        })
      }
      // this.testAsync();
    }
    // sleep(s) {
    //   return new Promise((resolve, reject) => {
    //     setTimeout(() => {
    //       resolve('promise resolved');
    //     }, s * 1000);
    //   });
    // }
    // async testAsync() {
    //   const data = await this.sleep(3);
    //   console.log(data);
    // }
    getUserInfo(cb) {
      const that = this;
      if (this.globalData.userInfo) {
        return this.globalData.userInfo;
      }
      wepy.getUserInfo({
        success(res) {
          that.globalData.userInfo = res.userInfo;
          cb && cb(res.userInfo);
        }
      });
    }
    checkSession(jump=true) {
      console.log(999)
      if(Auth.getToken() == '') {
        if(jump) wepy.navigateTo({ url: '/pages/authorize' });
        return false;
      } else {
        return true;
      }
      // Auth.checkSession()
    }
    authNavigateTo(url) {
      if (wepy.$instance.checkSession(true)) {
        wepy.navigateTo({ url });
      }
    }
    checkOrgCode() {
      let code = wepy.getStorageSync('orgcode');
      if(code == false) {
        wepy.redirectTo({ url: 'change_org' });
      }
    }
    async checkMobileBinding() {
      var profile = wepy.getStorageSync('profile');
      if(!profile || !profile.mobile) {
        // 缓存页面路径 等再跳回来。
        var pages = getCurrentPages() //获取加载的页面
        var currentPage = pages[pages.length-1] //获取当前页面的对象
        var url = currentPage.route //当前页面url
        var options = currentPage.options //如果要获取url中所带的参数可以查看options
        var p = "?";
        for( var op in options) {
          p += op + '=' + options[op] + '&';
        }
        wepy.setStorageSync('flashUrl', '/' + url + p.slice(0,p.length-1))
        // console.log('flashUrl', flashUrl)

        let res = await Api.getProfile();
        if(!res.data.mobile) {
          Tips.alert('请先绑定手机号', () => {
            wepy.redirectTo({ url: 'bind_mob' });
          });
          return false;
        } else {
          return true;
        }
      }
      return true;
      // var profile = wepy.getStorageSync('profile');
      // if(!profile || !profile.mobile) wepy.redirectTo({ url: 'bind_mob' });
      // Tips.alert('请先绑定手机号', () => {
      //   wepy.redirectTo({ url: 'bind_mob' });
      // });
    }

    /* 处理时间格式化 fmt = yyyyMMdd hh:ss D  showToday为是否显示“今天” */
    formatDate(fmt, date, showToday) {
      let weeks = ['日', '一', '二', '三', '四', '五', '六'];
      let d = date ? new Date(date) : new Date();
      if (/(y+)/.test(fmt)) {
        fmt = fmt.replace(RegExp.$1, d.getFullYear() + '').substr(4 - RegExp.$1.length);
      }
      var o = {
        'M+': d.getMonth() + 1,
        'd+': d.getDate(),
        'h+': d.getHours(),
        's+': d.getSeconds(),
        'D': weeks[d.getDay()]
      }
      for (var k in o) {
        if (new RegExp(`(${k})`).test(fmt)) {
          var str = o[k] + '';
          fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? str : ('00' + str).substr(str.length))
        }
      }
      return fmt;
    }
   
  }
</script>

<style lang="less" src="./less/index.less"></style>
<style lang="less">
    @import 'style/public.less';
    @import 'style/iconfont.less';
    page{
        background: @colorBg
    }
    .btn{
      border-radius: 10rpx;
    }
    .container {
        // background: #111;
        overflow: hidden;
        min-height: 100vh;
        box-sizing: border-box;
        padding: 0;
        // color: #ffffff;
    }

    .container::before {
        position: fixed;
        top: 0;
        left: 0;
        content: ' ';
        width: 100%;
        height: 1 rpx;
        z-index: 5;
    }
    .h1{
      font-size: 40rpx;
      padding: 20rpx 30rpx;
    }

    .row {
        width: 100%;
        padding-top: 20 rpx;
        text-align: center;
    }

    .row:after {
        display: block;
        content: ' ';
        clear: both;
        visibility: hidden;
        height: 0;
    }
 
    .popup__content {
        width: 300 rpx;
        height: 300 rpx;
        line-height: 300 rpx;
        background: #ffffff;
        border-radius: 12 rpx;
        text-align: center;
    }

    .popup__content_full {
        width: 100%;
        height: 200 rpx;
        line-height: 200 rpx;
        text-align: center;
        background: #ffffff;
    }

    .popup__content_side {
        height: 100%;
        background: #fff;
        text-align: center;
        display: flex;
        flex-flow: column;
    }

    .popup__content_side .top {
        background: #ddd;
        flex: 0;
        color: black;
        .t {
          text-align: left;
          font-size: 30 rpx;
          padding: 20rpx 30rpx;
          line-height: 90 rpx;
          font-weight: bold;
        }
    }

    .popup__content_side .main {
        background: #efefef;
        flex: 1;
        display: flex;
        font-size: 26 rpx;
    }

    .popup__content_side .main .left {
        overflow: auto;
        background: #e6e6e6;
    }

    .popup__content_side .main .middle {
        overflow: auto;
        background: #eee;
    }

    .popup__content_side .main .right {
        overflow: auto;
        background: #f4f4f4;
    }

    .popup__content_side .bottom {
      background: #999;
      display: flex;
      height: 70rpx;
      view{
         height: 70rpx;
         line-height:70rpx;
      }
    }

  .text-emphasized{
    color: #f40;
    border: 1px solid #f40;
    border-radius: 6rpx;
    padding: 3rpx 6rpx;
    font-size: 24rpx;
    margin: 0 6rpx;
    display: inline-block;
    line-height: 100%;
  }
</style>
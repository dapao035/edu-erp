<template>
  <popup :show.sync="visible" position="right">
    <block slot="popContainer">
      <view class="popup__content_side">
        <view class="top">
          <view class="t">
            选择门店
          </view>
        </view>
        <view class="main">
          <view class="left" style="flex:1">
            <radioList :items.sync="citys" :checkedItem.sync="checkedArea" :simpleType='simpleType' flag='city'/>
          </view>
          <view class="middle" style="flex:1">
            <radioList2 :items.sync="areas" :checkedItem.sync="checkedArea" :simpleType='simpleType' flag='area'/>
          </view>
          <view class="right" style="flex:2">
            <checkList :items.sync="divisions" :checkedItems.sync="checkedItems"/>
          </view>
        </view>
        <view class="bottom">
          <view @tap="handleHide"
            style="flex:1; background: #ccc; color: black; font-size:30rpx;"
          >关 闭</view>
          <view @tap="handleRequest"
            style="flex:1; background: #525fe1; color: #000; font-size:30rpx;"
          >确 认</view>
        </view>
      </view>
    </block>
  </popup>
</template>
<script>
import wepy from 'wepy';
import checkList from '../components/checkList'
import radioList from '../components/radioList'
import Api from '../common/Api'
import popup from '../uicomponents/popup/index'
import icon from '../uicomponents/icon/index'
export default class MaskDivisionSelector extends wepy.component {
  components = {popup, checkList, radioList, radioList2: radioList};
  props = {
    visible: {
      type: Boolean,
      default: false,
      twoWay: true,
    }
  };
  watch = {
    checkedItems(newValue, oldValue) {
      console.log(`num id: ${oldValue} -> ${newValue}`);
    },
    // datas(newValue, oldValue) {
    //   console.log(`num id: ${oldValue} -> ${newValue}`);
    //   this.citys = newValue;
    //   this.areas = newValue[0]._child;
    //   this.divisions = newValue[0]._child[0].divisions;
    //   // this.$apply()
    // }
  };
  data = {
    citys: [],
    areas: [],
    divisions: [],
    checkedArea: 2,
    checkedItems: [],
    simpleType: true,
    closeMask: false,
  };
  async onLoad() {
    let list = await Api.getRegions();
    this.citys = list.data;
    this.areas = list.data[0]._child;
    this.divisions = list.data[0]._child[0].divisions;
    this.$apply()
    // console.log('this.citys',this.citys);
  }
  events = {
    'change-checked-value': (val) => {
      console.log('checked-val',val)
    },
    'change-radio-value': (val, closeMask, flag) => {
      console.log('radio-val',val, closeMask, flag)

      if (flag == 'city') {
        console.log('oh city')
        this.citys.forEach((i, n )=> {
          if (i.id == val) {
            this.areas = i._child
          }
        });
        this.$apply();
      }

      if (flag == 'area') {
        console.log('oh area')
        this.areas.forEach((i, n )=> {
          if (i.id == val) {
            this.divisions = i.divisions
          }
        });
        this.$apply();
      }
      
      if(closeMask) {
        this.hideMask();
      }
    },
  };
  methods = {
    handleHide() {
      this.hideMask();

      // let popupComponent = this.$wxpage.selectComponent('.J_PopupArea');
      // popupComponent && popupComponent.hide();
      // this.status = 'hide';
      // this.$apply();
    },
    handleRequest() {
      this.$emit('request-by-division', this.checkedItems)
      this.hideMask();
      this.checkedItems = [];
      this.$apply();
    }
    // handleShow() {
    //   let popupComponent = this.$wxpage.selectComponent('.J_PopupArea');
    //   popupComponent && popupComponent.show();
    // },
  };
  hideMask() {
    this.visible = false;
    this.$apply();
  }
}
</script>
<style>
  .popup-container {
    width: 90%;
  }
</style>
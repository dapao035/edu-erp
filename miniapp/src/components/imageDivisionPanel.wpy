<template>
  <block wx:for="{{items}}" wx:key="index" wx:for-index="index" wx:for-item="item">
    <view class="image-panel" style="width:{{100 / columnNum}}%" @tap="handleTap({{item.id}})">
    <view class="image-info image-panel-box2">
          <image src="{{item.image || '../images/banner.jpg'}}" lazy-load="true" class="width100" mode="widthFix"/>
          <view class="image-bottom-info">
            <view class = "l">
              <view class="t">{{item.name}}</view>
              {{item.address}}
              </view>
            <view class="r">
              <view class="t"> </view>
              <image src="{{item.is_colleted == 1 ? imageHeartActive : imageHeart }}" class="icon-img-big" @tap.stop="handleCollect({{item.id}}, {{item.is_colleted}})"/>
            </view>
          </view>
        </view>
      </view>
  </block>
</template>
<script>
import wepy from 'wepy';
// var px2rpx = 2, windowWidth=375;
import Api from '../common/Api'
import Tips from '../common/Tips'
export default class ImageActionPanel extends wepy.component {
  props = {
    items: {
      type: Array,
      default: []
    },
    columnNum: {
      type: Number,
      default: 1
    }
  }
  data = {
    lazyLoad: true,
    imageSize:{},
    imageHeartActive: '../images/heart2.png',
    imageHeart: '../images/heart1.png',
  };
  methods = {
    handleTap(id) {
      wepy.navigateTo({
        url: `./division?id=${id}`
      });
    },
    async handleCollect(id, is_colleted) {
      if(wepy.$instance.checkSession() == false) return;
      let res;
      if(is_colleted == 1) {
        res = await Api.removeCollection({id: id,type:'division'})
      } else {
        res = await Api.addCollection({id: id,type:'division'})
      }
      // console.log('res', res);
      // if(res.status) (Tips.alert(res.msg))
      this.$emit('emit-request');
    },
    imageLoad(e){
      // //单位rpx
      // var originWidth = e.detail.width * px2rpx, 
      //     originHeight = e.detail.height * px2rpx,
      //     ratio = originWidth/originHeight;
      // var viewWidth = 710, viewHeight//设定一个初始宽度
      // //当它的宽度大于初始宽度时，实际效果跟mode=widthFix一致
      // if(originWidth>= viewWidth){
      //     //宽度等于viewWidth,只需要求出高度就能实现自适应
      //     viewHeight = viewWidth/ratio;
      // }else{
      //     //如果宽度小于初始值，这时就不要缩放了
      //     viewWidth = originWidth;
      //     viewHeight = originHeight;
      // }
      // this.imageSize = {
      //     width: viewWidth / this.columnNum,
      //     height: viewHeight / this.columnNum
      // }
      // this.$apply();
    }
  };
  onLoad() {
    // wepy.getSystemInfo({
    //   success: function(res) {
    //     windowWidth = res.windowWidth;
    //     px2rpx = 750 / windowWidth;
    //   }
    // })
  }
}
</script>
<style lang="less">
@import '../style/variable.less';
.image-panel {
  // width: 50%;
  .image-panel-box2 {
 
    margin: 10rpx;
    overflow: hidden;
    text-align: center;
    font-size: @fontSizeSmall;
    // box-shadow: 0 0 10rpx #d4d4d4;
    image{
      border-radius: @panelBorderRadius;
    }
  }
}
</style>

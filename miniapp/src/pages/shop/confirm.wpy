<template>
  <view>

    <panel>
      <view class="panel-content">
        <cellgroup custom-class="single-cellgroup">
          <view>
            <cell :title.sync="address" :arrow="showArrow" :access="showArrow" :item="addressItem"></cell>
          </view>
        </cellgroup>
      </view>
    </panel>
    <panel>
      <view class="panel-content">
        <view class="goods-item" style="display:flex" wx:for="{{goodsList}}" wx:for-item="item" wx:key="index">
          <image
            class="goods-image"
            mode="aspectFill"
            src="{{item.image}}"
          />
          <view class="goods-content">
              <view class="goods-name">
                  <view class='name'>{{item.name}}</view>
                  <view class='spec'>￥{{item.price}} x {{item.num}}</view>
              </view>
              <view class="goods-price">￥{{item.total}}</view>
          </view>
        </view>
      </view>
    </panel>
    <panel>
      <view class="panel-content">
        <cellgroup custom-class="single-cellgroup">
          <view>
            <cell1 title="备注" :subtitle.sync="remark" :arrow="showArrow" :access="showArrow" :item="remarkItem"></cell1>
            <cell2 title="支付方式" detail="微信支付" :arrow="showArrow"></cell2>
          </view>
        </cellgroup>
      </view>
    </panel>
    <fixBottom>
        <block slot="content">
            <view class="nav_btm flex1" style="text-align:left; padding-left: 30rpx;"> 合计￥{{total_pay}}</view>
            <view class="nav_btm flex1" style="background: #525fe1;color:white;" @tap="handlePay">提交订单</view>
        </block>
    </fixBottom>
     
    <popup :show.sync="showPopup" position="bottom">
        <block slot="popContainer">
            <view class="popup-content-wrapper">
              <view class="popup-tt">选择地址
                  <text class='popup-close' @tap="hideAddress">关闭</text>
              </view>
              <view class="cont" style="height:320rpx;">
                <radio-circle :config.sync="config" @bindchange.user="onChangeAdress">
                  <block slot="radio-body">
                    <repeat for="{{addressOptions}}" index="index" item="item" key="radio-{{index}}">
                      <label class="radio-item">
                        <view class="radio-card">
                          <text @tap.stop="editAddress({{item.id}})">
                            <icon type="edit"></icon>
                          </text> 
                          {{item.value}}
                        </view>
                        <radio value="{{item.id}}" checked="{{item.checked}}"/>
                      </label>
                    </repeat>
                  </block>
                </radio-circle>
              </view>
              <view class="butt">
                <button class="btn" @tap="addAddress">添加地址</button>
              </view>
          </view>
        </block>
      </popup>

      <popup1 :show.sync="showRemarkPopup" position="bottom">
        <block slot="popContainer">
              <view class="popup__content">
                <view class="popup-content-wrapper">
                    <view class="popup-tt">
                        输入备注
                        <text class='popup-close' @tap="hideRemark">关闭</text>
                    </view>
                    <view class="cont">
                        <textarea @blur="bindRemarkBlur" placeholder="请输入..." name="textarea" adjust-position="true"/>
                    </view>
                    <view class="butt">
                      <button class="btn" @tap="hideRemark">确 定</button>
                    </view>
                </view>
            </view>
        </block>
      </popup1>
    </view>
</template>
<script>
import wepy from 'wepy';
import Api from '../../common/Api';
import Tips from '../../common/Tips';
import fixBottom from '../../components/fixBottom';
import radio from '../../uicomponents/radio/index'
import popup from '../../uicomponents/popup/index'
import panel from '../../uicomponents/panel/index'
import icon from '../../uicomponents/icon/index'
import cell from '../../uicomponents/cell/index'
import cellGroup from '../../uicomponents/cell-group/index'

export default class Confirm extends wepy.page {
  config = {
    navigationBarTitleText: '确认订单',
  };
  components = { fixBottom,
    'radio-circle': radio,
    'popup': popup,
    'popup1': popup,
    'panel': panel,
    'cell': cell,
    'cell1': cell,
    'cell2': cell,
    cellgroup: cellGroup,
    icon,
  };
  data = {
    showArrow: true,
    addressItem: {
      type: 'address',
    },
    remarkItem: {
      type: 'remark',
    },
    showPopup: false,
    showRemarkPopup: false,
    config: {
      className: 'ad-radio',
      position: 'right',
    },
    remark:'',
    formData:{
      remark: '',
      address: '',
      code: '',
    },
    address:'设置收货地址',
    goodsList: [],
    addressOptions: [],
    addressList: [],
    total_pay: 0,
  };
  async onLoad(options) {
    if(wepy.$instance.checkMobileBinding()) {
      let res = await Api.cartConfirm({info:options.info});
      this.goodsList = res.data.list
      this.total_pay = res.data.total
      this.formData.code = res.data.code
      this.$apply();
    }
  }
  onShow() {
    this.getAdressList()
  }
  async getAdressList() {
   let res_a = await Api.getAddress();
    this.addressList = res_a.data;
    let list = [];
    for (let index = 0; index < res_a.data.length; index++) {
      list.push({
        id: res_a.data[index].id,
        value: res_a.data[index].name + ' ' + res_a.data[index].mobile + ' ' + res_a.data[index].address,
        checked: false,
      });
    }
    this.addressOptions = list
    this.$apply();

    if (this.formData.address == '' && this.addressList.length > 0) {
      this.formData.address = this.addressList[0].id
      this.address = this.addressList[0].name + ' ' + this.addressList[0].mobile + ' ' + this.addressList[0].address
      this.$apply();
    }
  }
  methods = {
    onChangeAdress(e) {
      this.formData.address = e
      for (let i = 0; i < this.addressOptions.length; i++) {
          if(this.addressOptions[i].id == e) {
              this.address = this.addressOptions[i].value
              break
          }
      }
      this.showPopup = false;
      this.$apply()
    },
    bindRemarkBlur(e) {
      this.formData.remark = e.detail.value
      this.remark = e.detail.value
      this.$apply()
    },
    hideRemark() {
      this.showRemarkPopup = false;
      this.$apply()
    },
    hideAddress() {
      this.showPopup = false;
      this.$apply()
    },
    addAddress(){
      wepy.navigateTo({url: `./address_new`})
    },
    editAddress(id){
      console.log(id)
      this.addressList.forEach(i => {
        if(i.id == id) {
          let info = JSON.stringify(i)
          wepy.navigateTo({url: `./address_new?info=${info}`})
        }
      });
    },
    async handlePay() {
      if(this.formData.address) {
        let make_res = await Api.makeGoodsOrder(this.formData);
        if (make_res.status == 'success') {
          let res = await Api.wxPay(make_res.data.pay_info);
          if (res.errMsg == 'requestPayment:ok') {
              wepy.redirectTo({ url: './notice_pay' });
          } else {
              Tips.alert('未支付');
          }
        }
      } else {
        Tips.alert('请设置收货地址')
      }
    },
  };

  events = {
    'item-tap' : (item) =>{
      if(item.type == 'address') {
        // this.getAdressList()
        this.showPopup = true;
      }
      if(item.type == 'remark') {
        this.showRemarkPopup = true;
      }
      this.$apply()
    }
  };
}
</script>
<style lang="less">

.list__title--main{
     white-space: nowrap!important;
}
.goods-item {
    display:flex;
    align-items:center;
    font-size: 26rpx;
    padding: 20rpx 0;
    border-bottom: 1px solid #eee;
    .goods-image {
        width: 102rpx;
        height: 102rpx;
        margin-right: 30rpx;
        margin-left: 20rpx;
    }
    .goods-content{
        flex:1; display: flex;
        align-items: center;
        .goods-name{
            flex: 4;
            padding: 0 20rpx;
            .name {
            }
            .spec{
                font-size: 24rpx;
                color: #999;
            }
        }
        .goods-price{
             padding: 0 20rpx;
            flex: 1;
        }
    }
}

// 弹出层
.popup-container {
  height: 600rpx;
  text-align: center;
}
.popup-tt{
    font-size: 26rpx;
    text-align: left;
    padding: 20rpx 30rpx;
    .popup-close{
        float: right;
        color: #999;
    }
}
.popup-content-wrapper{
    .cont{
        padding: 10rpx 30rpx;
        overflow: auto;
        textarea{
            width: 100%;
            text-align: left;
            font-size: 28rpx;
        }
    }
    .butt{

    }
}
.ad-radio{
  font-size: 28rpx;
 
  .radio-card{
      text-align: left;
  white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}
  
  .single-cellgroup {
 margin-bottom: 10px;
}

.single-cellgroup .cell-class > view:last-of-type{
  font-size: 10px;
}
.title-new{
  display: inline-block;
  margin-right: 5px;
}
.title-text{
  color: red;
}
.icon{
	display: inline-block;
	margin-right: 5px;
}
</style>

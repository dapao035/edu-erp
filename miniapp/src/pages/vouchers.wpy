<template>
  <view class="container">

    <view class="search-inputs">
      <view class='l'>
        <input placeholder="请输入兑换码" auto-focus @input="handleInput"></input>
      </view>
      <view class='r' @tap="getVoucher">
        获取
      </view>
    </view>

      <!-- <view class="content-title content-tab mb">
            <view class="t" @tap="handleShowTab('')">未使用</view>
            <view class="t" @tap="handleShowTab('is_used')">未使用</view>
            <view class="t" @tap="handleShowTab('is_expired')">已失效</view>
        </view> -->

    <block wx:for="{{list}}" wx:key="index" wx:for-index="index" wx:for-item="item">
      <view class="nav-item">
        <view class="l">
          <view class="title text-light" style="font-size:40rpx;">￥{{wxs.fixNumber(item.price)}}</view>
        </view>
        <view class="m">
          <view class="desc">满<text style='color: black'>{{wxs.fixNumber(item.catch_price)}}</text>可用</view>
          <view class="desc">有效期:{{item.invalid_at}}</view>
        </view>
        <view class="r">
          <view class="item-action disable" wx:if="{{item.is_used == 1}}">已用</view>
          <view class="item-action disable" wx:elif="{{item.is_expired == 1}}">失效</view>
          <view class="item-action" wx:else >可用</view>
        </view>
      </view>
    </block>
   <block wx:if="{{list.length == 0}}">
      <emptyInfo flag="voucher"/>
    </block>
  </view>
</template>
<script>
import wepy from 'wepy';
import Api from '../common/Api';
import Tips from '../common/Tips';
import wxs from '../wxs/util.wxs'
import emptyInfo from '../components/emptyInfo';
export default class Vouchers extends wepy.page {
  config = {
    navigationBarTitleText: '我的红包',
  };
  components = { emptyInfo };
  wxs = { wxs }
  data = {
    showTab: 0,
    list: []
  };
  methods = {
    handleShowTab(status){
    },
    handleInput(e){
      this.code = e.detail.value
      this.$apply()
    },
    async getVoucher(){
      let res = await Api.getVoucher({code: this.code})
      if ( res.status == 'success') {
        Tips.alert(res.msg)
        this.handleRequest()
      }else {
        Tips.alert(res.msg)
      }
    },
  };
  onLoad() {
    this.handleRequest()
  }
  async handleRequest() {
    let res = await Api.getVouchers()
    this.list = res.data;
    this.$apply();
  }
}
</script>

<style lang="less">
@import '../style/public.less';
@import '../style/panel.less';
.search-inputs{
  height: 80rpx;
  display:flex;
  background: @colorPanelBg;
  border-radius: 20rpx;
  overflow: hidden;
  align-items:center;
  margin: 20rpx;
  .l{
    flex: 1;
    padding: 15rpx 20rpx;
    height: 80rpx;
    box-sizing: border-box;
    input{
      width: 100%;
    }
  }
  .r{
    width: 140rpx;
    height: 80rpx;
    line-height: 80rpx;
    text-align: center;
    color: @colorPanelBg;
    box-sizing: border-box;
    background: @colorHeightlight;
  }
}
</style>